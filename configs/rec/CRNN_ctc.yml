Global:
  algorithm: CRNN     # algorithm name
  use_gpu: true
  epoch_num: 2    # 3000
  log_smooth_window: 20
  print_batch_step: 10
  save_model_dir: ./output/rec_CRNN     # save model path
  save_epoch_step: 3
  eval_batch_step: 2000
  train_batch_size_per_card: 128
  test_batch_size_per_card: 128
  image_shape: [3, 32, 320]     # img: [c, h, w]
  max_text_length: 128
  character_type: ch
  # character_dict_path: ../../data/vocab.txt
  character_dict_path: ../dataset/rec_data/vocab.txt
  loss_type: ctc
  distort: true     # img_aug
  use_space_char: false   # recognition black(space)
  reader_yml: ./configs/rec/rec_chinese_reader_lb.yml
  pretrain_weights: ./pretrain_models/ch_rec_r34_vd_crnn/best_accuracy
  checkpoints:        # ./output/rec_CRNN/best_accuracy
  save_inference_dir:
  infer_img:

Architecture:
  function: ppocr.modeling.architectures.rec_model,RecModel

Backbone:
  function: ppocr.modeling.backbones.rec_resnet_vd,ResNet
  layers: 34

Head:
  function: ppocr.modeling.heads.rec_ctc_head,CTCPredict
  encoder_type: rnn
  SeqRNN:
    hidden_size: 256
    
Loss:
  function: ppocr.modeling.losses.rec_ctc_loss,CTCLoss

Optimizer:
  function: ppocr.optimizer,AdamDecay
  base_lr: 0.0005
  beta1: 0.9
  beta2: 0.999

  decay:
    function: piecewise_decay
    boundaries: [50000, 90000, 150000]
    decay_rate: 0.1